/*
 * Copyright (c) 2020. r4v3zn
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package fofa.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.r4v3zn.fofa.core.DO.FofaData;
import com.r4v3zn.fofa.core.client.FofaClient;
import lombok.SneakyThrows;
import org.apache.commons.lang3.concurrent.BasicThreadFactory;

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

import static org.apache.commons.lang3.StringUtils.isBlank;

/**
 * Title: BurpFofa
 * Desc: TODO
 * Date:2020/5/4 22:18
 * Email:woo0nise@gmail.com
 * Company:www.j2ee.app
 *
 * @author R4v3zn
 * @version 1.0.0
 */
public class BurpFofaUI {

    private JPanel panel1;
    private JTextField textFofaQuery;
    private JTable tableResult;
    private JButton buttonNext;
    private JButton buttonPrevious;
    private JButton buttonSearch;
    private JButton buttonExport;
    private final String[] HEADER = new String[]{"ip", "host", "port", "title"};
    private Integer pageSize = 20;
    /**
     * 线程池
     */
    ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(5,
            new BasicThreadFactory.Builder().namingPattern("task-schedule-pool-%d").daemon(true).build());

    public BurpFofaUI() {
        $$$setupUI$$$();
        buttonSearch.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                // TODO 获取用户名、密码
                String email = System.getenv("email");
                String token = System.getenv("token");
                FofaClient client = new FofaClient(email, token);
                String query = textFofaQuery.getText();
                if (!isBlank(query)) {
                    executorService.schedule(() -> {
                        String fields = String.join(",", HEADER);
                        FofaData fofaData = null;
                        try {
                            fofaData = client.getData(query, 1, pageSize, fields);
                        } catch (Exception exception) {
                            exception.printStackTrace();
                        }
                        List<List<String>> result = fofaData.getResults();
                        Object[][] tableData = new Object[result.size()][HEADER.length];
                        for (int i = 0; i < fofaData.getResults().size(); i++) {
                            tableData[i] = fofaData.getResults().get(i).toArray();
                        }
                        tableResult.setModel(new DefaultTableModel(tableData, HEADER));
                    }, 2, TimeUnit.SECONDS);
                }
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("BurpFofa");
        BurpFofaUI burpFofaUI = new BurpFofaUI();
        frame.setContentPane(burpFofaUI.panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(1, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(tableResult);
        final JLabel label1 = new JLabel();
        label1.setText("查询语句");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFofaQuery = new JTextField();
        panel1.add(textFofaQuery, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        buttonSearch = new JButton();
        buttonSearch.setText("查询");
        panel1.add(buttonSearch, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonExport = new JButton();
        buttonExport.setText("导出");
        panel1.add(buttonExport, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonNext = new JButton();
        buttonNext.setText("下一页");
        panel1.add(buttonNext, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonPrevious = new JButton();
        buttonPrevious.setText("上一页");
        panel1.add(buttonPrevious, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        TableModel tableModel = new DefaultTableModel(HEADER, pageSize);
        tableResult = new JTable(tableModel);
    }
}
